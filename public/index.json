[
{
	"uri": "/2-preparation/1-create-security-group/",
	"title": "Create Security Group",
	"tags": [],
	"description": "",
	"content": "\rWe need to create 2 Security Groups in 2 different regions. The two regions to choose are Singapore and N. Virginia.\nConfigure Security Group A Security Group acts as a virtual firewall to control inbound and outbound traffic for your EC2 instances. In this section, we will create a Security Group with appropriate rules for the EC2 instance.\nHere are the steps to create a Security Group in the Singapore region:\nLog in to the AWS Console.\nSearch for and select EC2 Select Security Groups On the Create security group interface\nSecurity group name: Enter web-sg Description: Enter Allows SSH and HTTP access VPC: Keep the default VPC Configure Inbound rules: We need to add three inbound rules by clicking Add rule and then configuring each one as follows: Type Protocol Port range Soucre SSH TCP 22 My IP HTTP TCP 80 AnyWhere-IPv4 HTTPS TCP 443 AnyWhere-IPv4 Click Create security group Repeat the same steps to create a Security Group in the N. Virginia region, but this time, name the security group web-vg.\n"
},
{
	"uri": "/",
	"title": "Global Load Balancing with Route 53 and Health Checks",
	"tags": [],
	"description": "",
	"content": "Global Load Balancing with Route 53 and Health Checks Overview Global Load Balancing with Route 53 and Health Checks focuses on building an intelligent and reliable global traffic distribution system using AWS\u0026rsquo;s Route 53 DNS service. By combining techniques like Weighted Routing, Geolocation Routing, and Failover Routing with Health Checks, the system can automatically redirect users to the nearest, healthiest, or proportionally loaded servers. The project\u0026rsquo;s goal is to ensure high availability, efficient load distribution, and improved global access performance for applications or websites.\nWorkshop Modules Introduction Preparation Weighted Routing Geolocation Routing Failover Routing Clean up reource "
},
{
	"uri": "/1-introduction/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Overview Global Load Balancing with Route 53 and Health Checks aims to build a global load balancing solution based on AWS\u0026rsquo;s DNS serviceâ€”Amazon Route 53. By using features such as Weighted Routing, Geolocation Routing, and Failover Routing combined with Health Checks, the system can automatically direct users to the most suitable server based on geographical location, operational status, or predefined load policies. This enhances the availability, access performance, and resilience of applications on a global scale.\nRoute 53 Amazon Route 53 is a managed DNS (Domain Name System) service from AWS that provides fast, reliable, and highly scalable domain name resolution. Route 53 allows users to route traffic to servers, applications, or other AWS resources based on various policies, such as geography, weighted distribution, and the health status of the endpoint. The service also supports domain registration and management, helping businesses build a global network infrastructure with high performance and optimal availability.\nEC2 Amazon EC2 (Elastic Compute Cloud) is an AWS cloud computing service that allows users to launch and manage virtual servers (instances) flexibly and on-demand. With EC2, users can easily deploy applications, store data, configure operating systems, and scale their infrastructure as needed. The service supports various instance types suitable for different purposes, such as web servers, data processing, or machine learning, helping to reduce costs and optimize operational performance.\n"
},
{
	"uri": "/2-preparation/2-create-ec2-instance/",
	"title": "Create EC2 Instance",
	"tags": [],
	"description": "",
	"content": "Create EC2 instance Proceed to create 2 EC2 instances in 2 regions, starting with Singapore.\nLogin to AWS Console\nSearch for EC2 Select EC2 In the EC2 dashboard\nSelect Instances Choose Launch instances Enter Name: web-singapore Choose Amazon Machine Image (AMI) Under the Application and OS Images (Amazon Machine Image) section, follow these steps:\nSelect Quick Start, then choose Amazon Linux. From Amazon Machine Image (AMI), select Amazon Linux 2023 kernel-6.1 AMI (Free tier eligible) Choose instance type\nUnder the Instance type section, select t2.micro. This instance type is eligible for the AWS Free Tier, making it suitable for applications with low resource requirements or for development environments. Configure key pair Under the Key pair (login) section, choose Create key pair, then configure it as follows:\nName: keysg Key pair type: RSA Private key file format: .pem Press Create key pair\nConfigure Network settings\nNext to Network settings, select Edit. Choose Select existing security group. From Common security groups, select the security group you created earlier.. Configure Advanced details\nScroll down to the bottom to the User data section and add the following code: #!/bin/bash yum update -y yum install -y httpd systemctl start httpd systemctl enable httpd echo \u0026#34;\u0026lt;h1\u0026gt;Web Server in Singapore Region\u0026lt;/h1\u0026gt;\u0026#34; \u0026gt; /var/www/html/index.html Review and Launch Instance\nReview your instance configuration in the Summary panel. When you\u0026rsquo;re ready, select Launch instance. Confirm and Check Status\nAfter receiving the confirmation message, select View all instances to return to the console dashboard. Monitor the instance\u0026rsquo;s launch status. Initially, the status will be pending and will then change to running when the instance is ready. Wait until the instance passes its Status check before attempting to connect. Create an EC2 instance in Virginia, similar to Singapore\nName: web-virginia Create a key pair with the Name: keyvg Configure Network settings to connect with the security group previously created in the N. Virginia region, named web-vg Paste the following User data code, making sure to change the displayed content: #!/bin/bash yum update -y yum install -y httpd systemctl start httpd systemctl enable httpd echo \u0026#34;\u0026lt;h1\u0026gt;Web Server in Virginia Region\u0026lt;/h1\u0026gt;\u0026#34; \u0026gt; /var/www/html/index.html Confirmation of successful creation. Check Website Copy the Public DNS and paste it into a browser to view the website content. The website is operational. "
},
{
	"uri": "/2-preparation/",
	"title": "Preparation",
	"tags": [],
	"description": "",
	"content": "Overview The first step is to create 2 Security Groups to connect to 2 EC2 instances in 2 different regions. We will then create 2 Health Checks and a Hosted Zone.\nA Route 53 Domain is required.\nWorkshop Modules Create Security Group Create EC2 Instance Create Health Check Create Hosted Zone "
},
{
	"uri": "/2-preparation/3-create-health-check/",
	"title": "Create Health checks",
	"tags": [],
	"description": "",
	"content": "\rProceed to create 2 Health checks in 2 regions, first in Singapore\nCreate Health checks Login to AWS Console\nSearch for Route 53 Select Route 53 In the Route 53 dashboard\nSelect Health checks Choose Create health check Configure Health checks\nName: SGHealthCheck Resource: Endpoint Specify endpoint by: IP address IP address: HTTP, then enter the Public IPv4 address of the EC2 instance in the Singapore region Enter Create Health check Similarly, proceed to create Health checks in the Virginia region\nConfigure Health checks\nName: VGHealthCheck Resource: Endpoint Specify endpoint by: IP address IP address: HTTP, then enter the Public IPv4 address of the EC2 instance in the Virginia region Enter Create Health check "
},
{
	"uri": "/3-weighted-routing/",
	"title": "Weighted Routing",
	"tags": [],
	"description": "",
	"content": "Configure Weighted Routing Login to AWS Console\nSearch for Route 53 Select Route 53 In the Route 53 dashboard\nSelect Hosted zones you\u0026rsquo;ve created Choose Create records Create 2 A Records with a Routing Policy of Weighted Record 1: Singapore\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Singapore TTL : 300 Routing Policy: Weighted Weight: 50 Health check ID: Choose Singapore Health check Record ID: SG-Weighted Enter Create records Record 2: Virginia\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Virginia TTL : 300 Routing Policy: Weighted Weight: 50 Health check ID: Choose Virginia Health check Record ID: VG-Weighted Enter Create records Test Open a browser and navigate to your domain (e.g., http://www.workshopkhang.com).\nRefresh the page multiple times, and you should see:\nSometimes the content \u0026ldquo;Web Server in Singapore\u0026rdquo;. Sometimes the content \u0026ldquo;Web Server in Virginia\u0026rdquo;. The frequency should reflect the 50/50 ratio you configured "
},
{
	"uri": "/2-preparation/4-create-hosted-zone/",
	"title": "Create Hosted Zones",
	"tags": [],
	"description": "",
	"content": "Create Hosted Zones Login to AWS Console\nSearch for Route 53 Select Route 53 In the Route 53 dashboard\nSelect Hosted zones Choose Create hosted zone Configure Hosted zones\nDomain name: enter your registered domain (e.g., workshopkhang.com) Description: write your own description (e.g., WorkshopAWS) Type: Public hosted zone Enter Create hosted zone After successfully creating the hosted zone, we will copy the 4 NS records from the newly created hosted zone and paste them into your domain\nUnder Registered domains, choose Action, then select Edit name servers Proceed to paste the 4 NS records from the created hosted zone, then click Save changes "
},
{
	"uri": "/4-geolocation-routing/",
	"title": "Geolocation Routing",
	"tags": [],
	"description": "",
	"content": "Configure Geolocation Routing Login to AWS Console\nSearch for Route 53 Select Route 53 In the Route 53 dashboard\nSelect Hosted zones you\u0026rsquo;ve created Choose Create records Delete the other record types because Route 53 only allows one record with a matching Name/Type, then proceed to create the new record.\nCreate 2 A Records with a Routing Policy of Geolocation Record 1: Singapore\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Singapore TTL : 60 Routing Policy: Geolocation Location: Asia Health check ID: Choose Singapore Health check Record ID: SG-Geolocation Enter Create records Record 2: Virginia\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Virginia TTL : 300 Routing Policy: Geolocation Location: North America Health check ID: Choose Virginia Health check Record ID: VG-Geolocation Enter Create records Test Use a testing tool from multiple locations, such as: https://geopeeker.com Access the domain address (e.g., http://www.workshopkhang.com) "
},
{
	"uri": "/5-failover-routing/",
	"title": "Failover Routing",
	"tags": [],
	"description": "",
	"content": "Configure Failover Routing Login to AWS Console\nSearch for Route 53 Select Route 53 In the Route 53 dashboard\nSelect Hosted zones you\u0026rsquo;ve created Choose Create records Delete the other record types because Route 53 only allows one record with a matching Name/Type, then proceed to create the new record.\nCreate 2 A Records with a Routing Policy of Failover Record 1: Singapore\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Singapore TTL : 300 Routing Policy: Failover Failover record type: Primary Health check ID: Choose Singapore Health check Record ID: SG-Failover Enter Create records Record 2: Virginia\nRecord name: www Record type: A Value: Public IPv4 address of the EC2 in Virginia TTL : 300 Routing Policy: Failover Failover record type: Secondary Health check ID: Choose Virginia Health check Record ID: VG-Failover Enter Create records To quickly test this, visit the domain (e.g., http://www.workshopkhang.com). You\u0026rsquo;ll see the Singapore homepage, as we set Singapore\u0026rsquo;s failover record type as Primary, making it the main server.\nTest Objective: When the Singapore server becomes \u0026ldquo;unresponsive\u0026rdquo; (unhealthy/unavailable), Route 53 will automatically failover to the Virginia server\nSteps:\nConnect to the EC2 Singapore instance via SSH using MobaXterm Stop the web server (Apache) on the EC2 Singapore instance using the command: sudo systemctl stop httpd Wait for approximately 1-2 minutes (depending on your Health Check time and fail threshold). Route 53 will then detect that the Singapore server is unhealthy and reroute traffic to Virginia Access the domain again (e.g., http://www.workshopkhang.com). If the configuration is correct, you will see the web server from Virginia After the test is complete, you can restart Apache in Singapore to restore normal system operation by entering the command sudo systemctl start httpd\nRoute 53 will automatically fail back to Singapore once the Health Check detects that the server is healthy "
},
{
	"uri": "/6-clean-up-resource/",
	"title": "Clean up resource",
	"tags": [],
	"description": "",
	"content": "Delete Health Check Access Route 53 â†’ Health checks Select the health checks you created â†’ Delete Delete the DNS record in the Hosted Zone Access Route 53 â†’ Hosted zones Go to your domain Select and delete the Weighted, Failover, and Geolocation records you created Delete Hosted Zone Only delete this if you no longer need to use the domain/zone Terminate EC2 instance Clean up in both the Singapore and Virginia regions\nAccess the EC2 dashboard Navigate to Instances Select the instances associated with the workshop Click on Instance state Select Terminate instance Delete Security group Clean up in both the Singapore and Virginia regions\nAccess the EC2 dashboard Go to Security Groups in the left navigation pane Select the security groups associated with the workshop Click on Actions Select Delete security group Delete Key Pair Clean up in both the Singapore and Virginia regions\nAccess the EC2 dashboard Navigate to Key Pairs in the left navigation pane Select the key pair used for the workshop Click on Actions Select Delete "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]